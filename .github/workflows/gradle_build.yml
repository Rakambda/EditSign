name: CI

on: [ push ]

env:
  APP_JAVA_VERSION: 16

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source
        uses: actions/checkout@v2.3.4
      - name: Restore keystore
        env:
          KEYSTORE_FORGE_MODS: ${{ secrets.KEYSTORE_FORGE_MODS }}
        if: env.KEYSTORE_FORGE_MODS != null
        run: |
          echo "${{ secrets.KEYSTORE_FORGE_MODS }}" > keystoreForgeMods.jks.asc
          gpg -d --passphrase "${{ secrets.KEYSTORE_FORGE_MODS_PASSPHRASE }}" --batch keystoreForgeMods.jks.asc > keystoreForgeMods.jks
      - name: Set up JDK
        uses: actions/setup-java@v2
        with:
          distribution: 'adopt'
          java-version: ${{ env.APP_JAVA_VERSION }}
      - uses: actions/cache@v2.1.6
        name: Restore gradle cache
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
          restore-keys: |
            ${{ runner.OS }}-gradle-${{ env.cache-name }}-
            ${{ runner.OS }}-gradle-
            ${{ runner.OS }}-
      - uses: actions/cache@v2.1.6
        name: Cache gradle wrapper
        with:
          path: ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('gradle/wrapper/gradle-wrapper.properties') }}
      - name: Set gradle permissions
        run: chmod +x gradlew
      - name: Check project
        run: ./gradlew clean check -PforgeKeyStore=keystoreForgeMods.jks -PforgeKeyStoreAlias=${{ secrets.KEYSTORE_FORGE_MODS_ALIAS }} -PforgeKeyStorePass=${{ secrets.KEYSTORE_FORGE_MODS_STORE_PASS }} -PforgeKeyStoreKeyPass=${{ secrets.KEYSTORE_FORGE_MODS_KEY_PASS }} -PforgeSignSHA1=f927f4701bf4c0620c7bd0a501ce278f5e5ecc62

  publish:
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout source
        uses: actions/checkout@v2.3.4
      - name: Restore keystore
        run: |
          echo "${{ secrets.KEYSTORE_FORGE_MODS }}" > keystoreForgeMods.jks.asc
          gpg -d --passphrase "${{ secrets.KEYSTORE_FORGE_MODS_PASSPHRASE }}" --batch keystoreForgeMods.jks.asc > keystoreForgeMods.jks
      - name: Set up JDK
        uses: actions/setup-java@v2
        with:
          distribution: 'adopt'
          java-version: ${{ env.APP_JAVA_VERSION }}
      - uses: actions/cache@v2.1.6
        name: Restore gradle cache
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
          restore-keys: |
            ${{ runner.OS }}-gradle-${{ env.cache-name }}-
            ${{ runner.OS }}-gradle-
            ${{ runner.OS }}-
      - uses: actions/cache@v2.1.6
        name: Cache gradle wrapper
        with:
          path: ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('gradle/wrapper/gradle-wrapper.properties') }}
      - name: Build Changelog
        id: github_release
        uses: mikepenz/release-changelog-builder-action@v2.3.0
        with:
          configuration: ".github/releasingConfiguration.json"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Create Release
        uses: actions/create-release@v1
        with:
          tag_name: ${{ github.ref }}
          release_name: ${{ github.ref }}
          body: ${{steps.github_release.outputs.changelog }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Set gradle permissions
        run: chmod +x gradlew
      - name: Push on stores
        run: ./gradlew build curseforge publishModrinth -Pchangelog="${{ steps.github_release.outputs.changelog }}" -PcurseforgeApiKey="${{ secrets.CURSEFORGE_API_KEY }}" -DmodrinthToken="${{ secrets.MODRINTH_TOKEN }}" -PforgeKeyStore=keystoreForgeMods.jks -PforgeKeyStoreAlias=${{ secrets.KEYSTORE_FORGE_MODS_ALIAS }} -PforgeKeyStorePass=${{ secrets.KEYSTORE_FORGE_MODS_STORE_PASS }} -PforgeKeyStoreKeyPass=${{ secrets.KEYSTORE_FORGE_MODS_KEY_PASS }} -PforgeSignSHA1=f927f4701bf4c0620c7bd0a501ce278f5e5ecc62

