import net.minecraftforge.gradle.common.tasks.SignJar

plugins {
    alias(libs.plugins.forge)
}

minecraft {
    mappings channel: "${mappings_channel}", version: "${mappings_version}"
    runs {
        client {
            workingDirectory project.file("../run")
            property "forge.logging.markers", "REGISTRIES"
            property "forge.logging.console.level", "debug"
            mods {
                editsign {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file("../run")
            property "forge.logging.markers", "REGISTRIES"
            property "forge.logging.console.level", "debug"
            mods {
                editsign {
                    source sourceSets.main
                }
            }
        }

        gameTestServer {
            workingDirectory project.file("../run")
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            property 'forge.enabledGameTestNamespaces', 'editsign'

            mods {
                editsign {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file("../run")
            property "forge.logging.markers", "REGISTRIES"
            property "forge.logging.console.level", "debug"
            args '--mod', 'editsign', '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')

            mods {
                editsign {
                    source sourceSets.main
                }
            }
        }
    }
}

sourceSets.main.resources { srcDir 'src/generated/resources' }

dependencies {
    minecraft(libs.forge)
    implementation project(":common")

    implementation(fg.deobf("me.shedaniel.cloth:cloth-config-forge:${libs.versions.clothConfigVersion.get()}"))
}

processResources {
    duplicatesStrategy = DuplicatesStrategy.INCLUDE

    from "src/main/resources", "../common/src/main/resources"

    filesMatching("META-INF/mods.toml") {
        expand project.properties
    }
}

ext {
    minecraftVersion = libs.versions.minecraftVersion.get()
}

jar.finalizedBy("reobfJar")

task signJar(type: SignJar, dependsOn: rootProject.buildJar, group: "modding") {
    onlyIf {
        project.hasProperty("forgeKeyStore")
                && project.hasProperty("forgeKeyStoreAlias")
                && project.hasProperty("forgeKeyStorePass")
                && project.hasProperty("forgeKeyStoreKeyPass")
                && rootProject.file(project.findProperty("forgeKeyStore")).exists()
    }

    keyStore = project.findProperty("forgeKeyStore") == null ? null : rootProject.file(project.findProperty("forgeKeyStore")).absolutePath
    alias = project.findProperty("forgeKeyStoreAlias")
    storePass = project.findProperty("forgeKeyStorePass")
    keyPass = project.findProperty("forgeKeyStoreKeyPass")
    inputFile = rootProject.jar.getArchiveFile()
    outputFile = rootProject.jar.getArchiveFile()
}
